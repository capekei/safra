---
description: Protect current technology stack and prevent unauthorized modifications
globs: **/*.{js,jsx,ts,tsx,json,yaml,yml,md}
alwaysApply: true
---

# **Technology Stack Protection Rule**

## **CRITICAL REQUIREMENT**

**NEVER modify the core technology stack without explicit permission and proper documentation in Task-master.** The current stack is carefully chosen and integrated.

## **Protected Technology Stack**

### **üèóÔ∏è Core Architecture (DO NOT MODIFY)**
- **Runtime**: Node.js 20+ (ES modules)
- **Frontend**: React 18.3.1 + TypeScript 5.6.3
- **Backend**: Express.js 4.21.2
- **Build Tool**: Vite 6.0.0
- **Package Manager**: pnpm (workspaces)

### **üé® Frontend Stack (PROTECTED)**
- **UI Components**: Radix UI (comprehensive set)
- **Styling**: Tailwind CSS 3.4.17 + Tailwind Merge
- **State Management**: TanStack React Query 5.60.5
- **Forms**: React Hook Form 7.55.0 + Hookform Resolvers
- **Routing**: Wouter 3.3.5
- **Icons**: Lucide React + React Icons
- **Animations**: Framer Motion + Tailwind Animate
- **Rich Text**: TipTap 3.0.7 (with extensions)

### **‚öôÔ∏è Backend Stack (PROTECTED)**
- **Database**: PostgreSQL (Neon cloud ‚Üí Supabase migration planned)
- **ORM**: Drizzle ORM 0.39.3 (‚Üí Prisma migration planned)
- **Validation**: Drizzle Zod 0.5.1 (‚Üí Yup migration planned)
- **Authentication**: Supabase Auth 2.52.1
- **Security**: bcrypt, JWT, CORS, Helmet, Rate Limiting
- **File Upload**: Multer (‚Üí Supabase Storage migration planned)

### **üîß Development Tools (PROTECTED)**
- **Testing**: Vitest + React Testing Library + Playwright
- **Linting**: TypeScript strict mode + ESLint
- **Dead Code**: ts-prune, knip
- **Task Management**: Task-master AI

## **Modification Rules**

### **üö´ FORBIDDEN Without Permission**
- **Replacing core technologies** (React, Express, TypeScript, Vite)
- **Changing package manager** (pnpm)
- **Switching build tools** (Vite)
- **Replacing major libraries** (Radix UI, Tailwind, React Query)
- **Changing database technology** (PostgreSQL)
- **Modifying authentication system** (Supabase Auth)

### **‚úÖ ALLOWED With Task-master Documentation**
- **Adding new libraries** that complement existing stack
- **Upgrading versions** within same major version
- **Performance optimizations** using existing tools
- **Security patches** and bug fixes
- **Planned migrations** (Drizzle ‚Üí Prisma, Zod ‚Üí Yup)

### **üìã Required Process for Changes**
1. **Create Task-master task** with detailed justification
2. **Research alternatives** and document trade-offs
3. **Get explicit permission** from project owner
4. **Plan migration strategy** with rollback plan
5. **Document changes** in changelog and README
6. **Update this rule** if stack changes are approved

## **Technology Stack Benefits**

### **üéØ Why This Stack Was Chosen**
- **Modern & Future-Proof**: Latest stable versions
- **Type Safety**: Full TypeScript integration
- **Performance**: Optimized for Dominican networks
- **Developer Experience**: Excellent tooling and DX
- **Community Support**: Large, active communities
- **Integration**: Well-tested combinations

### **üìä Stack Metrics**
- **React**: 200k+ GitHub stars
- **Vite**: 60k+ GitHub stars  
- **Tailwind**: 80k+ GitHub stars
- **Radix UI**: 20k+ GitHub stars
- **Prisma**: 50k+ GitHub stars (target)
- **Supabase**: 60k+ GitHub stars

## **Enforcement**

**This rule is MANDATORY for all development work.** Violations will result in:
- Code review rejection
- Rollback of unauthorized changes
- Documentation of incident in Task-master
- Review of development process

**Always prioritize stability and consistency over trendy alternatives.**
